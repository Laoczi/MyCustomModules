<?php

/**
 * @file
 * Module provide to sand emails for all users.
 *
 * Site admin can configurate a letter for email dispatch, and send it
 * to all register users.
 */

use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_mail().
 */
function dispatch_module_mail($key, &$message, $params) {
  $token_service = Drupal::token();

  switch ($key) {
    case 'email_dispatch':

      $message['subject'] = t('Email from phpmodule2.test');
      $message['body'][] =
        t('@message', [
          '@message' => $token_service->replace($params['message']),
        ]);
      break;
  }
}

/**
 * Implements hook_token_info().
 */
function dispatch_module_token_info() {
  $type = [
    'name' => t('Dispatch'),
    'description' => t('Dispatch token'),
  ];
  $username['username'] = [
    'name' => t('Username'),
    'description' => t('User name'),
  ];
  $site_email['site_email'] = [
    'name' => t('Site email'),
    'description' => t('Site email'),
  ];
  return [
    'types' => ['dispatch' => $type],
    'tokens' => [
      'dispatch' => [
        'username' => $username['username'],
        'site_email' => $site_email['site_email'],
      ],
    ],
  ];
}

/**
 * Implements hook_tokens().
 */
function dispatch_module_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  $site_email = \Drupal::config('system.site')->get('mail');

  $queue = Drupal::queue('users');
  $item = $queue->claimItem();
  $uid = $item->data['uid'];
  $user = \Drupal::entityTypeManager()->getStorage('user')->load($uid);
  $username = $user->name->value;
  foreach ($tokens as $name => $original) {

    switch ($name) {
      case 'username':
        $replacements[$original] = $username;
        $queue->deleteItem($item);
        break;

      case 'site_email':
        $replacements[$original] = $site_email;
        break;
    }
  }
  return $replacements;
}
