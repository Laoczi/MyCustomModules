<?php

/**
 * @file
 * Module provide custom content type - notes.
 *
 * User can create note nodes. Note contain 3 fields: title, body(main text),
 * status. User can upgrade status field as like in configuration.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function notes_module_form_notes_settings_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['reset']['#submit'][] = 'notes_module_notes_settings_form_reset_submit';
  $form['refresh']['#submit'][] =
    'notes_module_notes_settings_form_refresh_submit';
}

/**
 * Create the batch process for reset notes status.
 */
function notes_module_notes_settings_form_reset_submit() {
  $data = notes_module_load_data();
  $batch = [
    'title' => t('Reset notes status'),
    'operations' => [
      ['notes_module_reset_status_process', [$data]],
    ],
    'finished' => 'notes_module_reset_status_finished_callback',
    'file' => drupal_get_path('module', 'notes_module') .
      '/notes_module.batch.inc',
  ];

  batch_set($batch);
}

/**
 * Create the batch process for refresh notes status.
 */
function notes_module_notes_settings_form_refresh_submit($form, &$form_state) {

  $data = notes_module_load_data();
  $batch = [
    'title' => t('Refresh notes status'),
    'operations' => [
      ['notes_module_refresh_status_process', [$data]],
    ],
    'finished' => 'notes_module_refresh_status_finished_callback',
    'file' => drupal_get_path('module', 'notes_module') .
      '/notes_module.batch.inc',
  ];

  batch_set($batch);

}

/**
 * Load all notes ids for batch.
 */
function notes_module_load_data() {
  $output = [];

  $ids = \Drupal::entityQuery('node')
    ->condition('uid', '0', '>')
    ->condition('type', 'notes')
    ->execute();
  //$query = Drupal::database()->select('node_field_data', 'nfd');
  //$query->addField('nfd', 'nid');
  //$query->condition('type', 'notes');
  // $result = $query->execute();

  foreach ($ids as $id) {
    $output[] = $id;
  }
  return $output;
}
